<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Someone Elses Cloud</title>
        <description>Just trying to automate my life in cloud.</description>
        <link>https://someoneelsescloud.github.io/</link>
        <atom:link href="https://someoneelsescloud.github.io/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Mon, 12 Jun 2023 11:19:47 +1000</pubDate>
        <lastBuildDate>Mon, 12 Jun 2023 11:19:47 +1000</lastBuildDate>
        <generator>Jekyll v3.9.3</generator>
        
            <item>
                <title>Build a Website in Azure using GitHub Actions, Jekyll and Terraform Cloud.</title>
                <description>&lt;p&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/29r8FFi3G5M&quot; loading=&quot;lazy&quot; width=&quot;1920&quot; height=&quot;1080&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;I have been looking at moving away from &lt;a href=&quot;https://www.squarespace.com/&quot;&gt;Square Space&lt;/a&gt; and thought I would look at  free hosting options.&lt;/p&gt;

&lt;p&gt;There’s multiple options out there, such as AWS S3 buckets, Azure Storage Accounts, Azure Static Web App and GitHub Pages. These days, you don’t even need to purchase a domain name, GitHub pages is probably the more favoured option as you get a username.github.io domain name if you didn’t want to pay for a custom domain name!&lt;/p&gt;

&lt;p&gt;But I thought I would create this video and show all the technologies used in the real world today. The workflow in this video is a very common approach in today’s world working with  Cloud technologies. Initially there will be manual processes to setup the accounts and integration but once set up, its as easy as just pushing code to make future updates!&lt;/p&gt;

&lt;p&gt;Not to mention that this is a foundation where by you can enhance with A/B deployments, include throughout checks and testing before deploying, enforcing security controls or even scanning for bad practices!&lt;/p&gt;

&lt;p&gt;Really this is quite an over engineered scenario for your own personal page but its a fun project to learn different technologies and how they integrate!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;#&quot;&gt;… and did I mention &lt;strong&gt;everything is &lt;u&gt;FREE!&lt;/u&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So lets get started with setting up the configuration!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/overview-v3.jpg&quot; alt=&quot;Overview&quot; title=&quot;Overview&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#pre-requisites&quot;&gt;Pre-requisites&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1-setup-terraform-cloud-workspace&quot;&gt;1. Setup Terraform Cloud Workspace&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-create-a-service-principal&quot;&gt;2. Create a Service Principal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-assign-service-principal-permissions&quot;&gt;3. Assign Service Principal Permissions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-create-terraform-workspace-variables-for-azure-authentication&quot;&gt;4. Create Terraform Workspace Variables for Azure Authentication&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-create-github-repository&quot;&gt;5. Create GitHub Repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-create-terraform-workspace-variables-for-github-authentication&quot;&gt;6. Create Terraform Workspace Variables for GitHub Authentication&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-configure-terraform-token-as-github-actions-secret&quot;&gt;7. Configure Terraform Token as GitHub Actions Secret&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#8-setup-your-repository-with-the-demo-code&quot;&gt;8. Setup Your Repository with the Demo Code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#9-build-a-jekyll-website&quot;&gt;9. Build a Jekyll Website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#10-deploy-your-code&quot;&gt;10. Deploy your Code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#11-locate-your-website-url&quot;&gt;11. Locate your Website URL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;pre-requisites&quot;&gt;Pre-requisites&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Download Terraform (optional as Terraform Cloud is utilised via the workflow)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Install Terraform locally to run init, plans and apply. This is optional as GitHub Actions will invoke commands to Terraform Cloud.
        &lt;ol&gt;
          &lt;li&gt;Browse to &lt;a href=&quot;https://developer.hashicorp.com/terraform/downloads&quot;&gt;HashiCorp - Install Terraform&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;Extract your tools folder e.g. (C:\Workspace\Terraform)&lt;/li&gt;
          &lt;li&gt;Add the Path your Environment Path (Optional - For Convenience) - (&lt;a href=&quot;https://www.computerhope.com/issues/ch000549.htm&quot;&gt;Windows&lt;/a&gt; or &lt;a href=&quot;https://linuxize.com/post/how-to-add-directory-to-path-in-linux/&quot;&gt;Linux&lt;/a&gt;)&lt;/li&gt;
          &lt;li&gt;Run command to setup your local Terraform Cloud token:
            &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;terraform login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Setup a Terraform Cloud Account&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Register at &lt;a href=&quot;https://app.terraform.io/public/signup/account&quot;&gt;Terraform&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Setup an Azure Account&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Register at &lt;a href=&quot;https://azure.microsoft.com/en-us/free/&quot;&gt;Microsoft Azure&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Setup a GitHub Account&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Sign Up at &lt;a href=&quot;https://github.com/signup&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Setup Jekyll&lt;/strong&gt; (or your choice of software)
    &lt;ul&gt;
      &lt;li&gt;Download and Setup Up &lt;a href=&quot;https://jekyllrb.com/docs/step-by-step/01-setup/&quot;&gt;Jekyll&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-setup-terraform-cloud-workspace&quot;&gt;1. Setup Terraform Cloud Workspace&lt;/h1&gt;
&lt;p&gt;Terraform workspace to create and manage Azure resources.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Log into &lt;strong&gt;&lt;a href=&quot;https://app.terraform.io/app&quot;&gt;Terraform Cloud&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Under &lt;strong&gt;Projects &amp;amp; Workspaces&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/projects-workspaces.png&quot; alt=&quot;Alt text&quot; title=&quot;Projects &amp;amp; Workspaces&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Click &lt;strong&gt;Create Workspace&lt;/strong&gt; or &lt;strong&gt;New&lt;/strong&gt; and Select &lt;strong&gt;Workspace&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/new-workspace.png&quot; alt=&quot;Alt text&quot; title=&quot;New Workspace&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Select &lt;strong&gt;API Driven Workflow&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/api-driven.png&quot; alt=&quot;Alt text&quot; title=&quot;API Driven Workflow&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Enter a &lt;strong&gt;Name&lt;/strong&gt; for your &lt;strong&gt;Workspace&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select a &lt;strong&gt;Project&lt;/strong&gt; or leave as &lt;strong&gt;Default Project&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Create Workspace&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/name-workspace.png&quot; alt=&quot;Alt text&quot; title=&quot;Name Workspace&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Once created you will see the &lt;strong&gt;Waiting for Configuration&lt;/strong&gt; page&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/wait-config.png&quot; alt=&quot;Alt text&quot; title=&quot;Waiting for Configuration&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-create-a-service-principal&quot;&gt;2. Create a Service Principal&lt;/h1&gt;
&lt;p&gt;This service principal will be used to by the Terraform AzureRM provider to manage Azure.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Log into &lt;strong&gt;&lt;a href=&quot;https://portal.azure.com&quot;&gt;Azure Portal&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Browse to &lt;strong&gt;Azure Active Directory&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;App Registrations&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;New Registration&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Enter a &lt;strong&gt;Name&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Accounts in this organizational directory only&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/app-registration.png&quot; alt=&quot;Alt text&quot; title=&quot;App Registration&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Click &lt;strong&gt;Register&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Once Done, Click &lt;strong&gt;Certificates &amp;amp; Secrets&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Under &lt;strong&gt;Client Secrets&lt;/strong&gt;, Select &lt;strong&gt;+ New Client Secret&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/create-secret.png&quot; alt=&quot;Create Secret&quot; title=&quot;Create Secret&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Enter a &lt;strong&gt;Description&lt;/strong&gt; and Set an &lt;strong&gt;Expiry&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/add-secret.png&quot; alt=&quot;Add Secret&quot; title=&quot;Add Secret&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Click &lt;strong&gt;Add&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Take Note of the Secret&lt;/a&gt; under &lt;strong&gt;Value&lt;/strong&gt; (leave this screen as it is or copy the secret as it will disappear once you navigate awy from this screen!)&lt;/li&gt;
  &lt;li&gt;Open a New Azure Portal tab for the next step!&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;3-assign-service-principal-permissions&quot;&gt;3. Assign Service Principal Permissions&lt;/h1&gt;
&lt;p&gt;This will be the role assignments that will give the service principal access to create and manage  Azure resources.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Browse to the resource (in this example &lt;strong&gt;Subscriptions&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Access Control (IAM)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/iam.png&quot; alt=&quot;Access Control (IAM)&quot; title=&quot;Access Control (IAM)&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Click &lt;strong&gt;+ Add&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Add Role Assignment&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/role-assignment.png&quot; alt=&quot;Add Role Assignment&quot; title=&quot;Add Role Assignment&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Under &lt;strong&gt;Assignment Type&lt;/strong&gt;, Select &lt;strong&gt;Privileged Administrator Roles&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Under &lt;strong&gt;Assignment Type&lt;/strong&gt;, Enter the Permissions (in this example it will be &lt;strong&gt;Contributor&lt;/strong&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/contributor.png&quot; alt=&quot;Contributor&quot; title=&quot;Contributor&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Under &lt;strong&gt;Assign Access To&lt;/strong&gt;, Select &lt;strong&gt;User, Group, Or Service Principal&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Under &lt;strong&gt;Members&lt;/strong&gt;, Click &lt;strong&gt;Select Members&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Locate&lt;/strong&gt; your Service Principal and Click &lt;strong&gt;Select&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/select-sp.png&quot; alt=&quot;Select Service Principal&quot; title=&quot;Select Service Principal&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Review + Assign&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/assignment-success.png&quot; alt=&quot;Assignment Success&quot; title=&quot;Assignment Success&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;You should now have the Service Principal under the Role Assignments!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/assignment-done.png&quot; alt=&quot;Role Assignment Complete&quot; title=&quot;Role Assignment Complete&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;4-create-terraform-workspace-variables-for-azure-authentication&quot;&gt;4. Create Terraform Workspace Variables for Azure Authentication&lt;/h1&gt;
&lt;p&gt;These variables will be used to authentication the Terraform AzureRM provider.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Log into &lt;strong&gt;&lt;a href=&quot;https://app.terraform.io/app&quot;&gt;Terraform Cloud&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Under &lt;strong&gt;Projects &amp;amp; Workspaces&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/projects-workspaces.png&quot; alt=&quot;Alt text&quot; title=&quot;Projects &amp;amp; Workspaces&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Locate and Select your &lt;strong&gt;Terraform Workspace&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Variables&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/workspace-variables.png&quot; alt=&quot;Workspace Variables&quot; title=&quot;Workspace Variables&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Now you will need get the details from above ( &lt;strong&gt;Create a Service Principal&lt;/strong&gt; above)&lt;/li&gt;
  &lt;li&gt;Under &lt;strong&gt;Workspace Variables&lt;/strong&gt;, Select &lt;strong&gt;+ Add Variable&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Now Create the Following Variables:&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Variable Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;client_id&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Client ID (also known as the Application ID) of your Service Principal&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;client_secret&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Client Secret of your Service Principal&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;subscription_id&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Subscription ID of where you have assigned your Service Principal Role Assignments&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;tenant_id&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Tenant ID of your Azure Tenant&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;Once done you should have a screen as below!&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;#&quot;&gt;Don’t forget to mark your secrets as sensitive as they can be used to access your subscription.&lt;/a&gt;
&lt;img src=&quot;/images/2023-05-13/create-workspace-variables.png&quot; alt=&quot;Create Workspace Variables&quot; title=&quot;Create Workspace Variables&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;5-create-github-repository&quot;&gt;5. Create GitHub Repository&lt;/h1&gt;
&lt;p&gt;This repository will be used to store the Terraform code and GitHub Actions Workflow.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Log into &lt;strong&gt;&lt;a href=&quot;https://github.com&quot;&gt;GitHub.com&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;New&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Enter a &lt;strong&gt;Repository Name&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Enter a &lt;strong&gt;Description&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Set the Repository to &lt;strong&gt;Public&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Initialize this repository with&lt;/strong&gt;: Check &lt;strong&gt;Add  a README file&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Add .gitignore&lt;/strong&gt; and Select &lt;strong&gt;Terraform&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Create Repository&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/new-repo.png&quot; alt=&quot;Alt text&quot; title=&quot;New Repository&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;6-create-terraform-workspace-variables-for-github-authentication&quot;&gt;6. Create Terraform Workspace Variables for GitHub Authentication&lt;/h1&gt;
&lt;p&gt;This token will be used with GitHub Actions to create a Secret via Terraform, which will be used to publish the website.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Log into &lt;strong&gt;&lt;a href=&quot;https://github.com&quot;&gt;GitHub.com&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click on your &lt;strong&gt;Profile&lt;/strong&gt; and Select &lt;strong&gt;Settings&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/github-settings.png&quot; alt=&quot;Profile Settings&quot; title=&quot;Profile Settings&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Scroll to the bottom and Click &lt;strong&gt;Developer Settings&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Under &lt;strong&gt;Personal Access Tokens&lt;/strong&gt;, Select &lt;strong&gt;Fine-Grained Tokens&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/fine-grained-tokens.png&quot; alt=&quot;Fine-Grained Tokens&quot; title=&quot;Fine-Grained Tokens&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Configure (as Required):&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Configuration&lt;/th&gt;
      &lt;th&gt;Attribute&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Token Name&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;AZURE_STATIC_WEB_APPS_API_TOKEN&lt;/td&gt;
      &lt;td&gt;NA&lt;/td&gt;
      &lt;td&gt;Name for your token, this will appear in the GitHub UI&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Expiration&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;30 Days&lt;/td&gt;
      &lt;td&gt;NA&lt;/td&gt;
      &lt;td&gt;This is up to you, ideally you should frequently rotate this on a regular basis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Azure Static Web App API Token&lt;/td&gt;
      &lt;td&gt;NA&lt;/td&gt;
      &lt;td&gt;Description for your Token&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Repository Access&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Only Select Repositories&lt;/td&gt;
      &lt;td&gt;Select Your Repository Name&lt;/td&gt;
      &lt;td&gt;You should also go with the least privileged access controls to mitigate risks&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Metadata&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Read-Only (Mandatory Default)&lt;/td&gt;
      &lt;td&gt;NA&lt;/td&gt;
      &lt;td&gt;This is a Mandatory Configuration item&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Permissions&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Repository Permissions &amp;gt; Actions&lt;/td&gt;
      &lt;td&gt;Read-Only&lt;/td&gt;
      &lt;td&gt;Required to Read the GitHub Actions Workflow&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Permissions&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Repository Permissions&amp;gt; Secrets&lt;/td&gt;
      &lt;td&gt;Read and Write&lt;/td&gt;
      &lt;td&gt;Required to create the GitHub Actions Workflow Secret&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;Click &lt;strong&gt;Generate Token&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/generate-token.png&quot; alt=&quot;Generate Token&quot; title=&quot;Generate Token&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Copy&lt;/strong&gt; the &lt;strong&gt;Personal Access Token&lt;/strong&gt; (PAT)&lt;/li&gt;
  &lt;li&gt;Go back to Step 4 above to create a new &lt;strong&gt;Workspace Variable&lt;/strong&gt; named &lt;strong&gt;GITHUB_TOKEN&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Variable Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;GITHUB_TOKEN&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;GitHub Token to be able to Create the GitHub Actions Workflow Secret - &lt;strong&gt;Note&lt;/strong&gt;: This is case sensitive and needs to align with the variables.tf file&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/github-variable.png&quot; alt=&quot;GitHub Variable&quot; title=&quot;GitHub Variable&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;#&quot;&gt;Don’t forget to mark your secrets as sensitive as they can be used to access your subscription.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;7-configure-terraform-token-as-github-actions-secret&quot;&gt;7. Configure Terraform Token as GitHub Actions Secret&lt;/h1&gt;
&lt;p&gt;This will be used with GitHub Actions to interface with Terraform Cloud via CLI.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Log into &lt;strong&gt;&lt;a href=&quot;https://app.terraform.io/app&quot;&gt;Terraform Cloud&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click on your &lt;strong&gt;Profile&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;User Settings&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/tf-profile.png&quot; alt=&quot;Alt text&quot; title=&quot;Terraform Profile&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Click &lt;strong&gt;Tokens&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Create an API Token&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Enter a &lt;strong&gt;Name&lt;/strong&gt; and &lt;strong&gt;Expiration&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/create-token.png&quot; alt=&quot;Alt text&quot; title=&quot;Create Token&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Click &lt;strong&gt;Generate Token&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Copy the Token&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Browse back to &lt;strong&gt;&lt;a href=&quot;https://github.com&quot;&gt;GitHub.com&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Find the newly created repository and Click &lt;strong&gt;Settings&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Under &lt;strong&gt;Security&lt;/strong&gt;, Select &lt;strong&gt;Secrets and Variables&lt;/strong&gt; then Select &lt;strong&gt;Actions&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/github-secrets.png&quot; alt=&quot;Alt text&quot; title=&quot;GitHub Secrets&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Under Secrets, Select &lt;strong&gt;New Repository Secret&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/new-secret.png&quot; alt=&quot;Alt text&quot; title=&quot;New Repository Secret&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Enter a &lt;strong&gt;Name&lt;/strong&gt; for the &lt;strong&gt;Secret&lt;/strong&gt; (example is TF_API_TOKEN)&lt;/li&gt;
  &lt;li&gt;In the &lt;strong&gt;Secret&lt;/strong&gt; box, Paste the above &lt;strong&gt;API Token&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/actions-secret.png&quot; alt=&quot;Alt text&quot; title=&quot;Actions Secret&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Click &lt;strong&gt;Add Secret&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Now you should have a new secret under &lt;strong&gt;Repository Secrets&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/api-token.png&quot; alt=&quot;Alt text&quot; title=&quot;API Token&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;8-setup-your-repository-with-the-demo-code&quot;&gt;8. Setup Your Repository with the Demo Code&lt;/h1&gt;
&lt;p&gt;So next up, we will write some simple Terraform code to deploy the resource group and static web app.
Clone my repository which has all the Terraform code and GitHub Actions Workflow.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Log into &lt;strong&gt;&lt;a href=&quot;https://github.com&quot;&gt;GitHub.com&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Clone the above repository: &lt;strong&gt;&lt;a href=&quot;https://github.com/someoneelsescloud/azure_website_actions_terraform&quot;&gt;azure_website_actions_terraform&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Copy all the Terraform files (*.tf) to your &lt;strong&gt;NEW REPOSITORY&lt;/strong&gt; created in step &lt;a href=&quot;#6-create-github-repository&quot;&gt;6. Create GitHub Repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Update the following configuration:&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Filename&lt;/th&gt;
      &lt;th&gt;Configuration&lt;/th&gt;
      &lt;th&gt;Attribute&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;providers.tf&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Terraform &amp;gt; Cloud&lt;/td&gt;
      &lt;td&gt;Organization&lt;/td&gt;
      &lt;td&gt;Add your Terraform Cloud Organization Name&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;providers.tf&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Terraform &amp;gt; workspaces&lt;/td&gt;
      &lt;td&gt;Name&lt;/td&gt;
      &lt;td&gt;Add your Terraform Cloud Workspace Name&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;main.tf&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;locals &amp;gt; repo_name&lt;/td&gt;
      &lt;td&gt;NA&lt;/td&gt;
      &lt;td&gt;Add your Repository Name&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;Copy the &lt;strong&gt;.github/workflows/website-automation.txt&lt;/strong&gt; folder to your  &lt;strong&gt;NEW REPOSITORY&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Rename the file &lt;strong&gt;website-automation.txt&lt;/strong&gt; to &lt;strong&gt;website-automation.yaml&lt;/strong&gt; (this was named as a txt so my repo does try and the GitHub Actions Workflow everytime!)&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;9-build-a-jekyll-website&quot;&gt;9. Build a Jekyll Website&lt;/h1&gt;
&lt;p&gt;This is an option step, you can choose software of your choice. Once you have website code, it will need to be updated to the /src folder in your repository. The following steps are from the &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;Jekyll - Quick Start&lt;/a&gt; page. This was run on WSL Ubuntu.&lt;/p&gt;

&lt;p&gt;You can also get Jekyll templates from &lt;a href=&quot;https://jekyllthemes.io/free&quot;&gt;here&lt;/a&gt;. We’ll be using the &lt;a href=&quot;https://github.com/thiagorossener/jekflix-template&quot;&gt;Jekflix Template&lt;/a&gt; in this demo.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Install &lt;strong&gt;Gem&lt;/strong&gt; and &lt;strong&gt;Jekyll&lt;/strong&gt; by running:
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo gem install jekyll bundler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Browse to a temp directory. This will become your local website development directory&lt;/li&gt;
  &lt;li&gt;Create a new Jekyll website by running:
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo jekyll new mywebsite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Browse to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mywebsite&lt;/code&gt; folder:
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd mywebsite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Now build the website with Jekyll:
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll build --destination &amp;lt;path-to-repo&amp;gt;/src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Now in your repository folder you should have a &lt;strong&gt;/src&lt;/strong&gt; folder with html files.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;10-deploy-your-code&quot;&gt;10. Deploy your Code&lt;/h1&gt;
&lt;p&gt;Your repository should look something along the lines of:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/repo-files.png&quot; alt=&quot;Repo Files&quot; title=&quot;Repo Files&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Now merge your code into master
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add .
git commit -m &quot;initial upload&quot;
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Once your code is merged, open &lt;strong&gt;&lt;a href=&quot;https://github.com&quot;&gt;GitHub.com&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Actions&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Under &lt;strong&gt;All Workflows&lt;/strong&gt;, Select the &lt;strong&gt;Running Workflow&lt;/strong&gt;
    &lt;blockquote&gt;
      &lt;p&gt;&lt;a href=&quot;#&quot;&gt;&lt;strong&gt;Note&lt;/strong&gt;: You might will get an initial failure because your &lt;strong&gt;github_actions_secret&lt;/strong&gt; is created but it appears that the workflow does not update for the next stage, so it needs to be run again!&lt;/a&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/token-error.png&quot; alt=&quot;Token Error&quot; title=&quot;Token Error&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;If you get the above error, you can open the failed job and Click &lt;strong&gt;Re-Run Jobs&lt;/strong&gt; and Select &lt;strong&gt;Re-Run All Jobs&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/re-run-jobs.png&quot; alt=&quot;Re-Run All Jobs&quot; title=&quot;Re-Run All Jobs&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;11-locate-your-website-url&quot;&gt;11. Locate your Website URL&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Log into &lt;strong&gt;&lt;a href=&quot;https://portal.azure.com&quot;&gt;Azure Portal&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Locate your Resource Group (this will be in the Plan / Apply outputs from your GitHub Actions runs)&lt;/li&gt;
  &lt;li&gt;Click on the &lt;strong&gt;Static Web App&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Locate the &lt;strong&gt;URL&lt;/strong&gt; and this is your &lt;strong&gt;Website URL&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/2023-05-13/website-url.png&quot; alt=&quot;Website URL&quot; title=&quot;Website URL&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;#&quot;&gt;If you want to make changes to your website, all you need to do is push code to the &lt;strong&gt;/src&lt;/strong&gt; folder and the GitHub Actions Workflow will republish your website!&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;learn-more-at-the-following&quot;&gt;Learn more at the following:&lt;/h3&gt;
&lt;p&gt;You can learn more from the links below!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- &lt;a href=&quot;https://developer.hashicorp.com/terraform/tutorials/automation/github-actions&quot;&gt;HashiCorp - Automate Terraform with GitHub Actions&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;- &lt;a href=&quot;https://developer.hashicorp.com/terraform/tutorials/cloud-get-started&quot;&gt;HashiCorp - Get Started - Terraform Cloud&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;- &lt;a href=&quot;https://docs.github.com/en/actions/quickstart&quot;&gt;Quickstart for GitHub Actions&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;- &lt;a href=&quot;https://docs.github.com/en/actions/learn-github-actions&quot;&gt;Learn GitHub Actions&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;- &lt;a href=&quot;https://azure.microsoft.com/en-us/products/app-service/static/&quot;&gt;Microsoft - Static Web Apps&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;- &lt;a href=&quot;https://jekyllrb.com/docs/step-by-step/01-setup/&quot;&gt;Jekyll - Getting Started&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And that is it! You should now have a new website and this is generally how infrastructure and applications are managed in larger environments. Obviously there’s more controls such a code approvers, tighter security controls around access and networking but this was a cool project to experience multiple technologies and did I mention.. everything is free!&lt;/p&gt;

&lt;p&gt;Hope you enjoyed this blog and the YouTube video!&lt;/p&gt;

&lt;p&gt;Cheers&lt;br /&gt;
Sunny&lt;/p&gt;

</description>
                <pubDate>Sat, 13 May 2023 22:01:35 +1000</pubDate>
                <link>https://someoneelsescloud.github.io/blog/build-website-azure-actions-jekyll-terraform-copy</link>
                <guid isPermaLink="true">https://someoneelsescloud.github.io/blog/build-website-azure-actions-jekyll-terraform-copy</guid>
                
                <category>github-actions</category>
                
                <category>terraform</category>
                
                <category>azure</category>
                
                <category>jekyll</category>
                
                <category>pipeline</category>
                
                
            </item>
        
    </channel>
</rss>